Чем плоха @Autowired на полях класса?
* нарушение принципа единственной ответственности (SRP): очень уж легко и просто добавлять такие новые зависимости, не глядя
* сокрытие таких зависимотей: использование DI-контейнера -> ответственность за получение зависимостей выносится из класса
  во вне (DI-контейнер или ручное предоставление их через тесты) -> должен явно взаимодействовать с ними,
  используя публичные интерфейсы — методы или конструкторы, т.о становится четко понятно, что требует класс,
  а также опциональные ли это зависомости (через сеттеры) или обязательные (конструктор)
* зависимость от DI-контейнера: существует способ (путем вызова конструктора по-умолчанию) создать объект
  с использованием new в состоянии, когда ему не хватает некоторых из его обязательных зависимостей,
  и его использование приведет к NullPointerException;
  такой класс не может быть использован вне DI-контейнеров (тесты, другие модули) и нет способа кроме рефлексии
  предоставить ему необходимые зависимости
* Неизменность: мы не можем применять @Autowired к final полям